---
kind: pipeline
name: default
type: kubernetes

steps:
- name: build_are
  pull: if-not-exists
  image: docker:dind
  commands:
  - n=0; while [ "$n" -lt 60 ] && [ ! -e /var/run/docker.sock ]; do n=$(( n + 1 )); sleep 1; done
  - docker build -t app-$${DRONE_COMMIT_SHA} .
  environment:
    IMAGE_NAME: app-$${DRONE_COMMIT_SHA}
  volumes:
    - name: dockersock
      path: /var/run
  when:
    event: pull_request

- name: build_are_1
  pull: if-not-exists
  image: docker:dind
  commands:
  - n=0; while [ "$n" -lt 60 ] && [ ! -e /var/run/docker.sock ]; do n=$(( n + 1 )); sleep 1; done
  - docker build -t app-$${DRONE_COMMIT_SHA} .
  environment:
    IMAGE_NAME: app-$${DRONE_COMMIT_SHA}
  volumes:
    - name: dockersock
      path: /var/run
  when:
    branch: [ master, feature/* ]
    event: push

- name: build_acceptance
  pull: if-not-exists
  image: docker:dind
  commands:
  - n=0; while [ "$n" -lt 60 ] && [ ! -e /var/run/docker.sock ]; do n=$(( n + 1 )); sleep 1; done
  - docker build -f Dockerfile-acceptance -t acceptance-$${DRONE_COMMIT_SHA} .
  environment:
    IMAGE_NAME: app-$${DRONE_COMMIT_SHA}
  volumes:
    - name: dockersock
      path: /var/run
  when:
    event: pull_request

- name: build_acceptance_3
  pull: if-not-exists
  image: docker:dind
  commands:
  - n=0; while [ "$n" -lt 60 ] && [ ! -e /var/run/docker.sock ]; do n=$(( n + 1 )); sleep 1; done
  - docker build -f Dockerfile-acceptance -t acceptance-$${DRONE_COMMIT_SHA} .
  environment:
    IMAGE_NAME: app-$${DRONE_COMMIT_SHA}
  volumes:
    - name: dockersock
      path: /var/run
  when:
    branch: [ master, feature/* ]
    event: push

- name: test_acceptance
  pull: if-not-exists
  image: docker:dind
  commands:
  - n=0; while [ "$n" -lt 60 ] && [ ! -e /var/run/docker.sock ]; do n=$(( n + 1 )); sleep 1; done
  - docker run -d --name=redis-$${DRONE_COMMIT_SHA} redis
  - docker run -d -e NODE_ENV=ci -e DISABLE_CSP=true --name=app-$${DRONE_COMMIT_SHA} --net=container:redis-$${DRONE_COMMIT_SHA} app-$${DRONE_COMMIT_SHA}
  - docker run --rm --net=container:app-$${DRONE_COMMIT_SHA} acceptance-$${DRONE_COMMIT_SHA}
  - docker rm -vf "app-$${DRONE_COMMIT_SHA}" "redis-$${DRONE_COMMIT_SHA}"
  environment:
    IMAGE_NAME: app-$${DRONE_COMMIT_SHA}
  volumes:
    - name: dockersock
      path: /var/run
  when:
    event: pull_request

- name: test_acceptance_5
  pull: if-not-exists
  image: docker:dind
  commands:
  - n=0; while [ "$n" -lt 60 ] && [ ! -e /var/run/docker.sock ]; do n=$(( n + 1 )); sleep 1; done
  - docker run -d --name=redis-$${DRONE_COMMIT_SHA} redis
  - docker run -d -e NODE_ENV=ci -e DISABLE_CSP=true --name=app-$${DRONE_COMMIT_SHA} --net=container:redis-$${DRONE_COMMIT_SHA} app-$${DRONE_COMMIT_SHA}
  - docker run --rm --net=container:app-$${DRONE_COMMIT_SHA} acceptance-$${DRONE_COMMIT_SHA}
  - docker rm -vf "app-$${DRONE_COMMIT_SHA}" "redis-$${DRONE_COMMIT_SHA}"
  environment:
    IMAGE_NAME: app-$${DRONE_COMMIT_SHA}
  volumes:
    - name: dockersock
      path: /var/run
  when:
    branch: [ master, feature/* ]
    event: push

- name: image_to_quay
  pull: if-not-exists
  image: docker:dind
  commands:
  - docker login -u="ukhomeofficedigital+are" -p=$${DOCKER_PASSWORD} quay.io
  - docker tag app-$${DRONE_COMMIT_SHA} quay.io/ukhomeofficedigital/are-app:${DRONE_COMMIT_SHA}
  - docker push quay.io/ukhomeofficedigital/are-app:$${DRONE_COMMIT_SHA}
  environment:
    IMAGE_NAME: app-$${DRONE_COMMIT_SHA}
    DOCKER_PASSWORD:
      from_secret: DOCKER_PASSWORD
  when:
    branch: master
    event: push

- name: trigger_deploy_to_are_dev
  pull: if-not-exists
  image: quay.io/ukhomeofficedigital/drone-trigger:v0.3.0
  settings:
    server: https://drone.acp.homeoffice.gov.uk
    token: ${DRONE_TOKEN}
    fork: true
    repositories:
      - UKHomeOffice/kube-are@deploy_to_dev
    params: APP_IMAGE_TAG=${DRONE_COMMIT_SHA},KUBE_NAMESPACE=are-dev
  when:
    branch: [ master, feature/* ]
    event: push


- name: trigger_deploy_to_are_preprod
  pull: if-not-exists
  image: quay.io/ukhomeofficedigital/drone-trigger:v0.3.0
  settings:
    branch: [ master, feature/* ]
    deploy_to: preprod
    drone_server: https://drone.acp.homeoffice.gov.uk
    params: APP_IMAGE_TAG=${DRONE_COMMIT_SHA},KUBE_NAMESPACE=are-preprod
    repo: UKHomeOffice/kube-are
  environment:
    DRONE_TOKEN:
      from_secret: DRONE_TOKEN
  when:
    event: promote
    target: preprod

- name: trigger_deploy_to_are_prod
  pull: if-not-exists
  image: quay.io/ukhomeofficedigital/drone-trigger:v0.3.0
  settings:
    branch: [ master, feature/* ]
    deploy_to: prod
    drone_server: https://drone.acp.homeoffice.gov.uk
    params: APP_IMAGE_TAG=${DRONE_COMMIT_SHA},KUBE_NAMESPACE=are
    repo: UKHomeOffice/kube-are
  environment:
    DRONE_TOKEN:
      from_secret: DRONE_TOKEN
  when:
    event: promote
    target: prod

services:
  - name: docker
    image: docker:dind
    volumes:
      - name: dockersock
        path: /var/run

volumes:
  - name: dockersock
    temp: {}

...
